#!/bin/bash
# name          : doubletab_display_configurator
# desciption    : enable / disable double tap gesture display activation
# autor         : speefak (itoss@gmx.de)
# licence       : (CC) BY-NC-SA
  VERSION=1.1
#-------------------------------------------------------------------------------------------------------------------------------------------------------
############################################################################################################
#######################################   define global variables   ########################################
############################################################################################################
#-------------------------------------------------------------------------------------------------------------------------------------------------------

 # load icon code
IconOff='data:image/png;base64,,'

IconOn='data:image/png;base64,,'

 GUIDesktopFileLocation="/home/nemo/.local/share/applications/doubletab_display.desktop"
 PackagesListRequired='mce-tools'
 ConfigFile=$HOME/.local/share/doubletabdisplay.cfg

#-------------------------------------------------------------------------------------------------------------------------------------------------------
############################################################################################################
#####################################   set vars from input options  #######################################
############################################################################################################
#-------------------------------------------------------------------------------------------------------------------------------------------------------

	OptionVarList="

		HelpDialog;-h
		EnableDisplayDoubleTabHideLockscreen;-eh
		EnableDisplayDoubleTabShowLockscreen;-es
		Switchmode;-sw
		DisableDisplayDoubleTab;-d
		ClearConfigFiles;-cc
	"

	# set entered vars from optionvarlist
	OptionAllocator=" "										# for option seperator "=" use cut -d "="
	SAVEIFS=$IFS
	IFS=$(echo -en "\n\b")
 	for InputOption in $(echo " $@" | sed 's/ -/\n-/g') ; do
		for VarNameVarValue in $OptionVarList ; do
			VarName=$(echo "$VarNameVarValue" | cut -d ";" -f1)
			VarValue=$(echo "$VarNameVarValue" | cut -d ";" -f2)
			if [[ $InputOption == "$VarValue" ]]; then
				eval $(echo "$VarName"='$InputOption')					# if [[ -n Option1 ]]; then echo "Option1 set";fi
				#eval $(echo "$VarName"="true")
			elif [[ $(echo $InputOption | cut -d "$OptionAllocator" -f1) == "$VarValue" ]]; then	
				eval $(echo "$VarName"='$(echo $InputOption | cut -d "$OptionAllocator" -f 2-10)')
			fi
		done
	done
	IFS=$SAVEIFS

#-------------------------------------------------------------------------------------------------------------------------------------------------------
############################################################################################################
###########################################   define functions   ###########################################
############################################################################################################
#-------------------------------------------------------------------------------------------------------------------------------------------------------
usage () {
cat << USAGE

 doubletab_display - version $VERSION
 Usage: $(basename $0) [-option]

 available options:
 -eh		(E)nable double tab display activation (H)ide lockscreen
 -es		(E)nable double tab display activation (S)how lockscreen
 -sw		(SW)itch mode between -eh and -d
 -d		(D)isable double tab display activation
 -cc		(C)lear (C)onfiguration and delete all script files

USAGE

 printf " $(tput setaf 1)$(echo $@ | cut -d ' ' -f1) $(tput sgr0)$(echo $@ | cut -d ' ' -f2-10)\n\n"
 exit

}
#-------------------------------------------------------------------------------------------------------------------------------------------------------
check_for_required_packages () {

	# check for required packages
	PackagesListInstalled=$(zypper packages --installed-only)
	for PackageRequired in $PackagesListRequired ; do
	   if [[ ! $(grep -w "$PackageRequired" <<< "$PackagesListInstalled")  ]]; then
		MissingPackages="$MissingPackages $PackageRequired"
	   fi
	done
	MissingPackages=$(sed 's/^[ \t]*//' <<< $MissingPackages)

	# install package request
	if [[ -n $MissingPackages ]]; then
	   printf  "missing packets:\e[0;31m $MissingPackages\e[0m\n"$(tput sgr0)
	   read -e -p "install required packets ? (Y/N) " InstallMissingPackages
	   if   [[ $InstallMissingPackages == [Yy] ]]; then
		# install software packets
		sudo zypper ref
		sudo zypper install $MissingPackages
		   if [[ ! $? == 0 ]]; then 
		       exit 1
		   fi
	   else 
	 	printf  "programm error:\e[0;31m missing packets : $MissingPackages\e[0m\n\n"$(tput sgr0)
	 	exit 1
	   fi	   
 	else
  		printf "\e[0;32m all required packets installed\n"$(tput sgr0)
 	fi
}
#------------------------------------------------------------------------------------------------------------------------------------------------
configure_dialog () {

#TODO read parameter i missing => 
# read -e -p "Enter Parameter (default: $(echo $Para1)): "  Para1
# Para1=${Para1:-default}

touch $ConfigFile

 # create config file
 ConfigParameterList=$(cat $0 | grep -A10 "configure_dialog () {" | grep "read -e -p \" Enter" | awk -F " " '{print $NF}')

 # display var input prompt 				default value			varname in configfile
 read -e -p " Enter configparameter: " 			-i "${CfgPara:-$CfgPara}"	CfgPara
 
 # print new Vars
 printf "\n new configuration values: \n\n"
 for i in $ConfigParameterList; do
	echo " $i=\""$(eval echo $(echo "$"$i))\" 
 done

 # check for existing config file
 if [[ -s $ConfigFile  ]]; then
	printf "\n"
	read -e -p " overwrite existing configuration (y/n) " -i "y" OverwriteConfig
	if [[ $OverwriteConfig == [yY] ]]; then
		rm $ConfigFile
	else
		sed -i '/Reconfigure=true/d'  $ConfigFile
		sed -i '/CreateNewConfig=true/d'  $ConfigFile
		printf "\n existing configuration :\n\n"
		cat $ConfigFile
		exit
	fi 
 fi

 # write Vars to config file
 for i in $ConfigParameterList; do
	echo "$i=\""$(eval echo $(echo "$"$i))\" >> $ConfigFile
 done

 printf "\n configuration saved in: $ConfigFile\n"

 $0
 exit
}
#------------------------------------------------------------------------------------------------------------------------------------------------
############################################################################################################
#################################   check config and required packages   ###################################
############################################################################################################
#------------------------------------------------------------------------------------------------------------------------------------------------

# if   [[ -s $ConfigFile  ]] && [[ -z $(cat $ConfigFile | grep "Reconfigure=true\|CreateNewConfig=true") ]]; then
#	# read config file
#	source $ConfigFile

# elif [[ -s $ConfigFile  ]] && [[ -n $(cat $ConfigFile | grep "Reconfigure=true") ]]; then
#	# read config and reconfigure
#	source $ConfigFile
#	configure_dialog

# elif [[ ! -s $ConfigFile  ]] || [[ -n $(cat $ConfigFile | grep "CreateNewConfig=true") ]]; then
#	# create new config file and check for required packets
#	check_for_required_packets
#	configure_dialog
# fi

#-------------------------------------------------------------------------------------------------------------------------------------------------------
############################################################################################################
#############################################   start script   #############################################
############################################################################################################
#-------------------------------------------------------------------------------------------------------------------------------------------------------

 # check help dialog
 if [[ -z "$1" ]] || [[ -n "$HelpDialog" ]] ; then 
	 usage
 fi
#-------------------------------------------------------------------------------------------------------------------------------------------------------

# check for input conflicts
 InputCounter=0
 for InputOption in $(echo " $@" | sed 's/ -/\n-/g') ; do
	for VarNameVarValue in $OptionVarList ; do
		VarName=$(echo "$VarNameVarValue" | cut -d ";" -f1)
		VarValue=$(echo "$VarNameVarValue" | cut -d ";" -f2)
		if [[ $InputOption == "$VarValue" ]]; then
			InputCounter=$(($InputCounter+1))
		fi
	done
 done

 if [[ $InputCounter -gt 1 ]]; then
	usage 	" Inputoptionconfict: $@"
 fi

#-------------------------------------------------------------------------------------------------------------------------------------------------------

 # check for config clear option
 if [[ -n $ClearConfigFiles ]]; then
 	rm $GUIDesktopFileLocation 	2> /dev/null
	rm $ConfigFile 			2> /dev/null
	exit
 fi

#-------------------------------------------------------------------------------------------------------------------------------------------------------

 # check for first time run #TODO if config function works obsolet 
 if [[ ! -f $ConfigFile ]]; then
 	check_for_required_packages
 fi
 touch $ConfigFile 2> /dev/null

#-------------------------------------------------------------------------------------------------------------------------------------------------------

 # check for switchmode
 if   [[ -n $Switchmode ]] ; then

	touch $GUIDesktopFileLocation
	DoubleTabMode=off		

	# check double tab status
	if [[ -n $(cat $GUIDesktopFileLocation | grep Comment | grep -w active) ]]; then
 		DoubleTabMode=on
	elif [[ -n $(cat $GUIDesktopFileLocation | grep Comment | grep -w inactive) ]]; then
	 	DoubleTabMode=off
	fi

 	if [[ $DoubleTabMode == off ]]; then

		# set UI icon	
		echo '	[Desktop Entry]
			Type=Application
			Name=Double Tab Display
			Icon='$IconOn'
			Exec=bash -c "'$0' -sw"
			Comment=Double tab display on is active
	 	' > $GUIDesktopFileLocation
		EnableDisplayDoubleTabHideLockscreen=true

	elif  [[ $DoubleTabMode == on ]]; then
	
		# set UI icon	
		echo '	[Desktop Entry]
			Type=Application
			Name=Double Tab Display
			Icon='$IconOff'
			Exec=bash -c "'$0' -sw"
			Comment=Double tab display on is inactive
	 	' > $GUIDesktopFileLocation
		DisableDisplayDoubleTab=true		
	fi
 fi

#-------------------------------------------------------------------------------------------------------------------------------------------------------

 # execute mce-tool config 
 if   [[ -n "$EnableDisplayDoubleTabHideLockscreen" ]] ; then
	printf " Enable doubletab display activation (hide lockscreen)\n"
	mcetool --set-doubletap-mode=unlock
	mcetool -i disabled
	mcetool -z proximity
 elif [[ -n "$EnableDisplayDoubleTabShowLockscreen" ]] ; then
	printf " Enable doubletab display activation (show lockscreen)\n"
	mcetool --set-doubletap-mode=show-unlock-screen
	mcetool -i disabled
	mcetool -z proximity
 elif [[ -n "$DisableDisplayDoubleTab" ]] ; then
	printf " Disable doubletab display activation\n"
	mcetool --set-doubletap-mode=disabled --set-fake-doubletap=enabled --set-doubletap-wakeup=never
	mcetool -i enabled
	mcetool -z never
 fi

#-------------------------------------------------------------------------------------------------------------------------------------------------------

 exit 0

